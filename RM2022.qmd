---
title: "Research Methods 2022"
author: "Ethan Milne // Ivey Business School"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format: 
    revealjs:
        theme: [default, ivey_theme.scss]
        footer: "Research Methods: Webscraping"
        logo: Images/PhD-Logo.jpg
        self-contained: true
bibliography: references.bib
execute: 
  cache: true
filters:
  - roughnotation
---

## Gameplan:

```{r}
#| echo: false
#| warning: false
#| message: false

library(gt)
library(gtsummary)
library(tidyverse)
library(kableExtra)
```

<br>

### Why webscrape? {style="color: black"}

<br>

### Scraping with APIs {style="color: black"}

<br>

### Scraping without APIs {style="color: black"}

::: footer
Introduction
:::

# Why Webscrape?

------------------------------------------------------------------------

## What is Webscraping?

![](images/1*JvlPRFFYl1qqtET4Syn8lQ.png)

::: footer
Why Webscrape?
:::

------------------------------------------------------------------------

## The Webscraping Iceberg

![](images/Screen%20Shot%202022-10-06%20at%202.10.57%20PM.png){fig-align="center"}

::: footer
Why Webscrape?
:::

# Scraping with APIs

------------------------------------------------------------------------

## What is an API?

<br>

[**A**]{style="color: red"}pplication [**P**]{style="color: red"}rogram [**I**]{style="color: red"}nterface

![](images/1*re837GMp63hzDnB8tEiZKA.png)

::: footer
Scraping with APIs
:::

------------------------------------------------------------------------

## APIs: Pros and Cons

<br>

+---------------------------+--------------------------------+
| ::: {style="color: blue"} | ::: {style="color: red"}       |
| **Pros**                  | **Cons**                       |
| :::                       | :::                            |
+---------------------------+--------------------------------+
| Easy to use               | Not available for every site   |
+---------------------------+--------------------------------+
| Well-documented           | No control over data available |
+---------------------------+--------------------------------+
| Limited liability         | Usage restrictions             |
+---------------------------+--------------------------------+

::: footer
Scraping with APIs
:::

# Twitter Study

------------------------------------------------------------------------

![](Images/bk_tweet_context.png){style="fig-align "}

::: footer
Twitter Study: Context
:::

------------------------------------------------------------------------

![](Images/alt_diagram.png){fig-align="center"}

::: footer
Twitter Study: Methods
:::

------------------------------------------------------------------------

![](images/Screen%20Shot%202022-09-12%20at%202.58.00%20PM.png){fig-align="center"}

------------------------------------------------------------------------

[![](images/Screen%20Shot%202022-09-12%20at%2010.25.02%20AM.png){fig-align="center"}](https://github.com/cjbarrie/academictwitteR)

::: footer
Twitter Study: Methods
:::

------------------------------------------------------------------------

##  {auto-animate="true"}

<br>

```{r}
#| eval: false
#| echo: true

library(academictwitteR)

bk_tweets <- get_all_tweets(
  query = "@BurgerKingUK",
  start_tweets = "2021-03-06T00:00:00Z",
  end_tweets = "2021-03-13T00:00:00Z",
  n = 10000000
)
```

::: footer
Twitter Study: Methods
:::

##  {auto-animate="true"}

<br>

```{r}
#| eval: false
#| echo: true

library(academictwitteR)

bk_tweets <- get_all_tweets(
  query = "@BurgerKingUK",
  start_tweets = "2021-03-06T00:00:00Z",
  end_tweets = "2021-03-13T00:00:00Z",
  n = 10000000
)

for (i in unique_authors) {
  past_tweets[[i]] <- get_all_tweets(
    users = unique_authors$username[start:end],
    start_tweets = "2021-03-01T00:00:01.000Z",
    end_tweets = "2021-03-08T00:00:01.000Z",
    n = 1000000
  )
}
```

::: footer
Twitter Study: Methods
:::

------------------------------------------------------------------------

<br>

![](images/Screen%20Shot%202022-09-11%20at%209.05.23%20PM.png)

::: footer
Twitter Study: Methods
:::

------------------------------------------------------------------------

## Results

```{r}
#| echo: false
#| message: false
#| warning: false

load(here::here("Tables/twitter_results_combined.rdata"))

t3 |>
  tab_style(
    style = cell_fill(color = "yellow"),
    locations = cells_body(rows = 4)
  ) |>
 tab_options(table.width = pct(100),
 table.font.size = 25) |>
  gt::as_raw_html()
```

::: footer
Twitter Study: Results
:::

# Scraping Without APIs

------------------------------------------------------------------------

## Building scrapers is [*hard*]{.underline}

<br>

### [No prebuilt code]{style="color: black"}

<br>

### [Websites not designed for scraping]{style="color: black"}

<br>

### [Websites protected against scraping]{style="color: black"}

::: footer
Scraping without APIs
:::

------------------------------------------------------------------------

## Building scrapers is [*rewarding*]{.underline}

<br>

### [You know your data inside and out]{style="color: black"}

<br>

### [Your data is unique]{style="color: black"}

<br>

### [Your scraper is a contribution]{style="color: black"}

::: footer
Scraping Without APIs
:::

------------------------------------------------------------------------

[![](images/Screen%20Shot%202022-09-12%20at%2010.23.43%20AM.png){fig-align="center"}](https://journal.transformativeworks.org/index.php/twc/article/view/1733)

::: footer
Scraping Without APIs
:::

# Structured: Wikipedia

------------------------------------------------------------------------

![](images/Screen%20Shot%202022-10-06%20at%202.14.49%20PM.png){fig-align="center"}

::: footer
Structured Webscraping
:::

------------------------------------------------------------------------

![](images/Screen%20Shot%202022-10-06%20at%202.15.53%20PM.png){fig-align="center"}

::: footer
Structured Webscraping
:::

------------------------------------------------------------------------

##  {auto-animate="true"}

<br>

```{r}
#| echo: true
#| eval: false
library(htmltab)
```

##  {auto-animate="true"}

<br>

```{r}
#| echo: true
library(htmltab)

htmltab("https://en.wikipedia.org/wiki/List_of_Game_of_Thrones_episodes", 
        2) |>
  select(c(1,2,7))
```

::: footer
Structured Webscraping: Example
:::

# Semi-Structured: Fanfiction

------------------------------------------------------------------------

<br>

![](images/fanficdef.png)

::: footer
Fanfiction Study: Methods
:::

------------------------------------------------------------------------

[![](images/Screen%20Shot%202022-09-12%20at%2010.26.10%20AM.png){fig-align="center"}](https://github.com/SEthanMilne/FanficReadeR/)

::: footer
Fanfiction Study: Methods
:::

------------------------------------------------------------------------

![](images/Screen%20Shot%202022-09-12%20at%202.13.26%20PM.png){fig-align="center"}

::: footer
Fanfiction Study: Methods
:::

------------------------------------------------------------------------

![](images/Screen%20Shot%202022-09-12%20at%202.15.32%20PM.png){fig-align="center"}

::: footer
Fanfiction Study: Methods
:::

------------------------------------------------------------------------

![](images/Screen%20Shot%202022-09-12%20at%202.16.27%20PM.png){fig-align="center"}

::: footer
Fanfiction Study: Methods
:::

------------------------------------------------------------------------

##  {auto-animate="true"}

### Get HTML pages

<br>

```{r}
#| message: false
#| warning: false
#| echo: true
library(httr)
library(rvest)

get_html <- function(input) {
  GET(
    input, #insert URL to scrape
    user_agent(
      "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36"
    )
  ) |>
    read_html()
}
```

::: footer
Fanfiction Study: Scraper
:::

##  {auto-animate="true"}

### Get HTML

<br>

```{r}
#| echo: true
get_html(input = "https://archiveofourown.org/tags/Fantastic%20Beasts%20and%20Where%20to%20Find%20Them%20(Movies)/works")
```

::: footer
Fanfiction Study: Scraper
:::

##  {auto-animate="true"}

### Read HTML

<br>

```{r}
#| echo: true
get_html(input = "https://archiveofourown.org/tags/Fantastic%20Beasts%20and%20Where%20to%20Find%20Them%20(Movies)/works") |>
  html_text2()

```

::: footer
Fanfiction Study: Scraper
:::

##  {auto-animate="true"}

### Build Function

<br>

```{r}
#| echo: true
get_pageworkIDs <- function(input){
  input |>
    html_elements(css = "ol.work.index.group") |>
    as.character() |>
    str_match_all("<li id=(.*?) class=") |>
    data.frame() |>
    select("X2") |>
    mutate(X2 = gsub('[[:punct:]]', "", X2),
           X2 = gsub("work", "", X2)) |>
    rename(id = X2) |>
    mutate(id = as.numeric(id),
           id = paste0("https://archiveofourown.org/works/", id))
}
```

::: footer
Fanfiction Study: Scraper
:::

##  {auto-animate="true"}

### Extract Information

<br>

```{r}
#| echo: true
input <- get_html(input = "https://archiveofourown.org/tags/Fantastic%20Beasts%20and%20Where%20to%20Find%20Them%20(Movies)/works")

get_pageworkIDs(input)
```

::: footer
Fanfiction Study: Scraper
:::

------------------------------------------------------------------------

![](images/Screen%20Shot%202022-09-12%20at%202.40.34%20PM.png)

::: footer
Fanfiction Study: Scraper
:::

------------------------------------------------------------------------

<br>

```{r}
#| echo: true

GetFandomIndex <- function(fandom, pages, start = 1) {
  ### Get number of pages
  indexURL <- get_indexURL(fandom)
  index <- get_html(indexURL)
  indexpages <- get_indexpages(index)
  pagecount <- min(pages, indexpages)
  index_ids <- as.data.frame(matrix(ncol = 1,
                                    nrow = 0))
  ### Scrape each page, store in dataframe
  for (i in start:pagecount) {
    pageURL <- get_indexURLpage(indexURL, i)
    page_html <- get_html(pageURL)
    id_list <- get_pageworkIDs(page_html)
    index_ids <- rbind(index_ids, id_list)
  }
  ### Output dataframe with all fanfictions
  index_ids
}

```

::: footer
Fanfiction Study: Scraper
:::

------------------------------------------------------------------------

::: columns
::: {.column width="40%"}
![](images/Screen%20Shot%202022-10-06%20at%202.36.22%20PM.png)
:::

::: {.column width="60%"}
![](images/Screen%20Shot%202022-10-06%20at%202.37.36%20PM-01.png)
:::
:::

# Conclusion

------------------------------------------------------------------------

## Thank you!

<br> <br>

::: columns
::: column
{{< fa brands twitter size=xl >}} SEthanMilne

<br> <br>

{{< fa envelope size=xl >}} emilne.phd@ivey.ca
:::

::: column
{{< fa brands github size=xl >}} SEthanMilne

<br> <br>

{{< ai google-scholar size=2xl >}} Ethan Milne
:::
:::

# References
